name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
          POSTGRES_DB: tickets
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U admin -d tickets"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build backend test image
        working-directory: ./BE
        run: docker build -f Dockerfile.test -t ticket-backend-test .

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432 -U admin; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Run backend tests inside container
        run: |
          docker run --rm \
            -e SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/tickets \
            -e SPRING_DATASOURCE_USERNAME=admin \
            -e SPRING_DATASOURCE_PASSWORD=admin123 \
            ticket-backend-test

  frontend-lint:
    name: Frontend Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: ./FE
        run: npm install

      - name: Run ESLint
        working-directory: ./FE
        run: npm run lint
